/*
*程序名：猴子分苹果
*作者：何卓远
*编制时间：2018-11-08
*功能：有1堆苹果共 m 个，由 n 只猴子按个数平均分配。
每次到达苹果堆放地的猴子只有1只，而且每个猴子都会平均分 1 次苹果。
第1个到达的猴子将苹果平均分成 n 等份，但发现多 k ( k < n )个，
于是，将多余的k个扔掉，然后拿走其中的1等份。
第 2 个猴子同样将剩余的苹果又分成 n 等份，也发现多 k 个，
并同样将多余的 k 个扔掉，然后拿走其中1等份。
之后的每个猴子都这样（将剩余的苹果又分成 n 等份，
也发现多 k 个，并将多余的 k 个扔掉，然后拿走其中1等份）。
假设最后的猴子分配后至少可以拿走1个苹果，请根据输入的 n 和 k值，计算最小的 m。
*/


#include <iostream>
#include<cmath>          //预处理指令

using namespace std;

int main()
{
	int n, k, i, j, a[100] = { 0 };
	cin >> n >> k;
	for (i = 1;; i++)      //最后一个猴子分完每份苹果i个
	{
		a[1] = i * n + k;
		for (j = 1; j < n; j++)
		{
			if (a[j] % (n - 1) != 0) break;   //若不能被n-1整除考虑下一个i
			else a[j + 1] = a[j] / (n - 1) * n +k;
		}
		if (a[n] != 0) break;    //得到第一个满足的结果结束循环
	}
	cout << a[n] << endl;
	return 0;    //程序结束
}

