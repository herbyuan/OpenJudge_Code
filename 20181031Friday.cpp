/*
*程序名：Friday
*作者：何卓远
*编制时间：2018-10-31
*功能：我是王大锤，已经过去半个月了，今天是2013年12月13日，又是一个黑色星期五。万万没想到，不，已经是预料之中的事情了，雇主王师傅由于怀疑我是叛徒，开除了我。我，又失去了工作。 
    13号、星期五，这是多么特殊的一个日子。（失去工作无事可干的）我很好奇13号在星期五比在其他日子少吗?为了回答这个问题,写一个程序，要求计算每个月的十三号落在周一到周日的次数。给定N，要求计算1900年1月1日至1900+N-1年12月31日中十三号分别落在星期六，星期日，星期一，…星期五的次数，N为正整数且不大于400. 

    请勿使用元素数目大于20的数组.
*/

#include <iostream>
#include<cmath>          //预处理指令

using namespace std;

int main()
{
	int i, j, k, N, a[20] = { 0 },t = 6;
	int year;
	bool leap;
	cin >> N;
	for (i = 0; i < N; i++)    //对应n年
	{
		year = 1900 + i;
		if (year % 4 == 0)         //能否被4整除
		{
			if (year % 100 == 0)    //能否被100整除
			{
				if (year % 400 == 0)   leap = true;  //能否被400整除，判断闰年
				else leap = false;              
			}
			else leap = true;
		}
		else leap = false;       //判断闰年
		if (leap)
		{
			a[t]++;
			t = (t + 31) % 7;
			a[t]++;
			t = (t + 29) % 7;
			a[t]++;
			t = (t + 31) % 7;
			a[t]++;
			t = (t + 30) % 7;
			a[t]++;
			t = (t + 31) % 7;
			a[t]++;
			t = (t + 30) % 7;
			a[t]++;
			t = (t + 31) % 7;
			a[t]++;
			t = (t + 31) % 7;
			a[t]++; 
			t = (t + 30) % 7;
			a[t]++;
			t = (t + 31) % 7; 
			a[t]++;
			t = (t + 30) % 7;
			a[t]++;
			t = (t + 31) % 7;


		}
		else
		{
			a[t]++; 
			t = (t + 31) % 7; 
			a[t]++;
			t = (t + 28) % 7; 
			a[t]++;
			t = (t + 31) % 7;
			a[t]++;
			t = (t + 30) % 7; 
			a[t]++;
			t = (t + 31) % 7; 
			a[t]++;
			t = (t + 30) % 7; 
			a[t]++;
			t = (t + 31) % 7; 
			a[t]++;
			t = (t + 31) % 7; 
			a[t]++;
			t = (t + 30) % 7; 
			a[t]++;
			t = (t + 31) % 7; 
			a[t]++;
			t = (t + 30) % 7; 
			a[t]++;
			t = (t + 31) % 7; 

		}
	}
	cout << a[6];
	for (k=0;k<6;k++)
		cout << " " << a[k];
	return 0;    //程序结束
}

