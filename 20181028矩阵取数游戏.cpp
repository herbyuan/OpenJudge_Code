/*
*程序名：矩阵取数游戏
*作者：何卓远
*编制时间：2018-10-28
*功能：帅帅经常跟同学玩一个矩阵取数游戏：对于一个给定的n行*m列的矩阵，矩阵中的每个元素aij均为非负整数。游戏规则如下： 
1. 每次取数时须从每行各取走一个元素，共n个。m次后取完矩阵所有的元素； 
2. 每次取走的各个元素只能是该元素所在行的行首或行尾； 
3. 每次取数都有一个得分值，为每行取数的得分之和；每行取数的得分 = 被取走的元素值*i，其中i表示第i次取数（从1开始编号）； 
4. 游戏结束总得分为m次取数得分之和。 
帅帅想请你帮忙写一个程序，对于任意矩阵，可以求出取数后的最大得分。
*/


#include <iostream>
#include<cmath>          //预处理指令

using namespace std;

int main()
{
	int a[85][85] = { 0 };
	int i, j, k;
	int m, n;
	int max[85] = { 0 };
	int f[85][85] = { 0 };
	int score = 0;
	int x, y;
	cin >> n >> m;
	for (i = 1;i <= n;i++)
	{
		for (j = 1;j <= m;j++)
		{
			cin >> a[i][j];
		}
	}       //读入矩阵

	for (k = 1; k <= n; k++)
	{
		f[k][1] = a[k][m];
		f[k][2] = a[k][1];  //DP初始化
		for (i = 2; i <= m; i++)
		{
			for (j = m; j >= 1; j--)
			{
				x = (f[k][j - 1] != 0)*(f[k][j - 1] + i * a[k][j - 1]);
				y = (f[k][j] != 0)*(f[k][j] + i * a[k][j + m - i]);
				f[k][j] = (x > y ? x : y);			 	 //每次比较取左侧端点与取右侧端点的得分大小，取较大解。
			}
		}
		for (i = 1; i <= m; i++)
		{
			if (f[k][i] > max[k]) max[k] = f[k][i];
		}
		score += max[k];
	}               //得到每行的最大分数

	cout << score;
	return 0;    //程序结束
}

